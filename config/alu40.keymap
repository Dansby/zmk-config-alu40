/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    macros {
        line: line {
            compatible = "zmk,behavior-macro";
            label = "LINE";
            #binding-cells = <0>;
            bindings = <&kp L &kp RET>;
        };
        circle: circle {
            compatible = "zmk,behavior-macro";
            label = "CIRCLE";
            #binding-cells = <0>;
            bindings = <&kp C &kp RET>;
        };
        trim: trim {
            compatible = "zmk,behavior-macro";
            label = "TRIM";
            #binding-cells = <0>;
            bindings = <&kp T &kp R &kp RET>;
        };
        fillet: fillet {
            compatible = "zmk,behavior-macro";
            label = "FILLET";
            #binding-cells = <0>;
            bindings = <&kp F &kp RET>;
        };
        arc: arc {
            compatible = "zmk,behavior-macro";
            label = "ARC";
            #binding-cells = <0>;
            bindings = <&kp A &kp RET>;
        };
        erase: erase {
            compatible = "zmk,behavior-macro";
            label = "ERASE";
            #binding-cells = <0>;
            bindings = <&kp E &kp RET>;
        };
        extend: extend {
            compatible = "zmk,behavior-macro";
            label = "EXTEND";
            #binding-cells = <0>;
            bindings = <&kp E &kp X &kp RET>;
        };
        layer: layer {
            compatible = "zmk,behavior-macro";
            label = "LAYER";
            #binding-cells = <0>;
            bindings = <&kp L &kp A &kp RET>;
        };
        lengthen: lengthen {
            compatible = "zmk,behavior-macro";
            label = "LENGTHEN";
            #binding-cells = <0>;
            bindings = <&kp L &kp E &kp N &kp RET>;
        };
        move: move {
            compatible = "zmk,behavior-macro";
            label = "MOVE";
            #binding-cells = <0>;
            bindings = <&kp M &kp RET>;
        };
        mirror: mirror {
            compatible = "zmk,behavior-macro";
            label = "MIRROR";
            #binding-cells = <0>;
            bindings = <&kp M &kp I &kp RET>;
        };
        offset: offset {
            compatible = "zmk,behavior-macro";
            label = "OFFSET";
            #binding-cells = <0>;
            bindings = <&kp O &kp RET>;
        };
        polygon: polygon {
            compatible = "zmk,behavior-macro";
            label = "POLYGON";
            #binding-cells = <0>;
            bindings = <&kp P &kp O &kp L &kp RET>;
        };
        qsave: qsave {
            compatible = "zmk,behavior-macro";
            label = "QSAVE";
            #binding-cells = <0>;
            bindings = <&kp Q &kp RET>;
        };
        rotate: rotate {
            compatible = "zmk,behavior-macro";
            label = "ROTATE";
            #binding-cells = <0>;
            bindings = <&kp R &kp O &kp RET>;
        };
        scale: scale {
            compatible = "zmk,behavior-macro";
            label = "SCALE";
            #binding-cells = <0>;
            bindings = <&kp S &kp C &kp RET>;
        };
        stretch: stretch {
            compatible = "zmk,behavior-macro";
            label = "STRETCH";
            #binding-cells = <0>;
            bindings = <&kp S &kp RET>;
        };
        explode: explode {
            compatible = "zmk,behavior-macro";
            label = "EXPLODE";
            #binding-cells = <0>;
            bindings = <&kp X &kp RET>;
        };
        join: join {
            compatible = "zmk,behavior-macro";
            label = "JOIN";
            #binding-cells = <0>;
            bindings = <&kp J &kp RET>;
        };
        align: align {
            compatible = "zmk,behavior-macro";
            label = "ALIGN";
            #binding-cells = <0>;
            bindings = <&kp A &kp L &kp RET>;
        };
        array: array {
            compatible = "zmk,behavior-macro";
            label = "ARRAY";
            #binding-cells = <0>;
            bindings = <&kp A &kp R &kp RET>;
        };
        copyspecific: copyspecific {
            compatible = "zmk,behavior-macro";
            label = "COPYSPECIFIC";
            #binding-cells = <0>;
            bindings = <&kp C &kp O &kp RET>;
        };
        q_calc: q_calc {
            compatible = "zmk,behavior-macro";
            label = "Q_CALC";
            #binding-cells = <0>;
            bindings = <&kp Q &kp C &kp RET>;
        };
        rectangle: rectangle {
            compatible = "zmk,behavior-macro";
            label = "RECTANGLE";
            #binding-cells = <0>;
            bindings = <&kp R &kp E &kp C &kp RET>;
        };
        solid: solid {
            compatible = "zmk,behavior-macro";
            label = "SOLID";
            #binding-cells = <0>;
            bindings = <&kp S &kp O &kp RET>;
        };
        snap: snap {
            compatible = "zmk,behavior-macro";
            label = "SNAP";
            #binding-cells = <0>;
            bindings = <&kp S &kp N &kp RET>;
        };
        mtext: mtext {
            compatible = "zmk,behavior-macro";
            label = "MTEXT";
            #binding-cells = <0>;
            bindings = <&kp T &kp RET>;
        };
        tedit: tedit {
            compatible = "zmk,behavior-macro";
            label = "TEDIT";
            #binding-cells = <0>;
            bindings = <&kp T &kp E &kp D &kp RET>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // | ESC/~ |  Q   |  W   |  E   |  R   |  T   |   Y   |  U    |  I   |  O   |   P   | BSPC  |
            // | TAB   |  A   |  S   |  D   |  F   |  G   |   H   |  J    |  K   |  L   |   ;   |  '    |
            // | SHIFT |  Z   |  X   |  C   |  V   |  B   |   N   |  M    |  ,   |  .   |   /   |RET/SFT|
            // | PLAY  | LCTL | LALT | LGUI | LOWR |     SPACE    |  RAIS | LARW | UARW | DARW  |  RARW |

            bindings = <
   &gresc      &kp Q     &kp W     &kp E  &kp R      &kp T      &kp Y  &kp U      &kp I    &kp O      &kp P       &kp BSPC
  &kp TAB      &kp A     &kp S     &kp D  &kp F      &kp G      &kp H  &kp J      &kp K    &kp L   &kp SEMI        &kp SQT
&kp LSHFT      &kp Z     &kp X     &kp C  &kp V      &kp B      &kp N  &kp M  &kp COMMA  &kp DOT  &kp SLASH  &mt RSHFT RET
 &kp C_PP  &kp LCTRL  &kp LALT  &kp LGUI  &mo 1  &kp SPACE  &kp SPACE  &mo 2   &kp LEFT   &kp UP   &kp DOWN      &kp RIGHT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        lower {
            bindings = <
&kp TILDE  &kp EXCL  &kp AT  &kp HASH  &kp DOLLAR  &kp PERCENT  &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS     &kp DEL
  &kp DEL    &kp F1  &kp F2    &kp F3      &kp F4       &kp F5     &kp F6      &kp MINUS      &kp PLUS        &kp LEFT_BRACE        &kp RIGHT_BRACE    &kp PIPE
   &trans    &kp F7  &kp F8    &kp F9     &kp F10      &kp F11    &kp F12         &trans        &trans                &trans                 &trans      &trans
   &trans    &trans  &trans    &trans       &mo 1       &trans     &trans          &mo 2    &kp K_PREV              &kp HOME                &kp END  &kp K_NEXT
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PG_DN>;
        };

        raise {
            bindings = <
&kp GRAVE  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5  &kp N6           &kp N7         &kp N8        &kp N9                &kp N0               &kp BSPC
  &kp TAB  &trans  &trans  &trans  &trans  &trans  &trans        &kp MINUS      &kp EQUAL      &kp PLUS        &kp UNDERSCORE               &kp BSLH
   &trans  &trans   &kp X  &trans  &trans  &trans  &trans  &kp KP_MULTIPLY  &kp KP_DIVIDE    &kp PERIOD  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
   &trans  &trans  &trans  &trans   &mo 3  &trans  &trans           &trans     &kp C_PREV  &kp C_VOL_UP          &kp C_VOL_DN             &kp C_NEXT
            >;

            sensor-bindings = <&inc_dec_kp C_BRI_DEC C_BRI_INC>;
        };

        control {
            bindings = <
     &sys_reset     &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4  &trans  &trans      &trans  &trans  &trans  &bt BT_CLR
&rgb_ug RGB_TOG  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &rgb_ug RGB_EFF  &trans  &trans      &trans  &trans  &trans      &trans
         &trans  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &rgb_ug RGB_EFR  &trans  &trans      &trans  &trans  &trans      &trans
    &bootloader           &trans           &trans           &trans           &trans           &trans  &trans  &trans  &bt BT_PRV  &trans  &trans  &bt BT_NXT
            >;

            sensor-bindings = <&inc_dec_kp LG(MINUS) LG(PLUS)>;
        };
    };
};
